@*This page is to add an appointment by the teacher*@

@page "/Appointment/Add"

@layout TeacherLayout

@using HK_Clinic2.Models
@using HK_Clinic2.Services

@inject AppointmentService Service
@inject TeacherService TService
@inject NurseService NService

<div class="container">
    <h3>Add an Appointment</h3>
    <RadzenFieldset Text="Add an Appointment">
        <EditForm Model="appointment" OnValidSubmit="CreateAppointment">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row col-4">
                <label style="margin-top: 10px">Appointment Date & Time:* </label>
                <RadzenDatePicker TValue="DateTime?" ShowTime="true" Change=@(args => OnChange()) HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Placeholder="MM/dd/yyyy h:mm tt" />
                <ValidationMessage For="@(() => appointment.AppointmentDateTime)" />
            </div>

            <div class="form-group row">
                <div class="form-group col-4">
                    <label for="teacherId">Teacher ID who scheduled the appointment:*</label>
                    <select id="teacherId" class="form-control" @onchange="AppointmentTeacherSelected">
                        <option value="">Select Teacher ID...</option>
                        @foreach (var item in teachers)
                        {
                            <option value="@item.EmployeeId">@item.EmployeeId</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => appointment.TeacherId)" />
                </div>
                <div class="form-group col-4">
                    <label for="nurseId">Nurse ID who this appointment is scheduled for:*</label>
                    <select id="nurseId" class="form-control" @onchange="AppointmentNurseSelected">
                        <option value="">Select Nurse ID...</option>
                        @foreach (var item in nurses)
                        {
                            <option value="@item.EmployeeId">@item.EmployeeId</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => appointment.NurseId)" />
                </div>
            </div>

            <div class="form-group row">
                <div class="form-group col-4">
                    <label for="reason">Reason: </label>
                    <InputTextArea class="form-control" id="reason" rows="3" @bind-Value="appointment.Reason" placeholder="Enter the reason of the appointment..."></InputTextArea>
                    <ValidationMessage For="@(() => appointment.Reason)" />
                </div>

                <div class="form-group col-4">
                    <label for="note">Note: </label>
                    <InputTextArea class="form-control" id="note" rows="3" @bind-Value="appointment.Note" placeholder="Enter a note (Name & Class of the student)..."></InputTextArea>
                </div>
            </div>            <div class="mt-4"></div>
            <button type="submit" class="btn btn-outline-primary">Add Appointment</button>
            &nbsp;&nbsp;
            <a href="Appointment/List" class="btn btn-outline-secondary" role="button">Go back to the list</a>
        </EditForm>
    </RadzenFieldset>
</div>
<br />
<p style="color:green; text-align:center;">@message</p>

@code {
    Appointment appointment = new Appointment();

    List<Teacher> teachers = new List<Teacher>();
    List<Nurse> nurses = new List<Nurse>();

    string message;

    protected override void OnInitialized()
    {
        teachers = TService.GetTeachers();
        nurses = NService.GetNurses();
    }

    void OnChange()
    {
        appointment.AppointmentDateTime = DateTime.Now;
    }

    private void AppointmentTeacherSelected(ChangeEventArgs e)
    {
        appointment.TeacherId = int.Parse(e.Value.ToString());
    }

    private void AppointmentNurseSelected(ChangeEventArgs e)
    {
        appointment.NurseId = int.Parse(e.Value.ToString());
    }

    private void CreateAppointment()
    {
        appointment.Status = 2;
        Service.AddAppointment(appointment);

        // To empty the form
        appointment = new Appointment();

        message = "Appointment added successfully";
    }
}
