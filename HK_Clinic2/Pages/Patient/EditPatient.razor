@page "/Patient/Edit/{Id:int}"

@layout NurseLayout

@inject NavigationManager NavigationManager

@inject PatientService Service

@inject HKClinicDbContext db

@using HK_Clinic2.Models;
@using HK_Clinic2.Services;

<div class="container">
    <h3>Edit Patient Information</h3>
    <RadzenFieldset Text="Edit">
        <EditForm Model="patient" OnValidSubmit="UpdatePatient">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-row">
                <div class="form-group col-4">
                    <label for="first-name">First Name:*</label>
                    <InputText id="first-name" @bind-Value="patient.FirstName" class="form-control" placeholder="Enter Patient's Fisrt Name" />
                </div>

                <div class="form-group col-4">
                    <label for="middle-name">Middle Name:*</label>
                    <InputText id="middle-name" @bind-Value="patient.MiddleName" class="form-control" placeholder="Enter Patient's Middle Name" />
                </div>

                <div class="form-group col-4">
                    <label for="last-name">Last Name:*</label>
                    <InputText id="last-name" @bind-Value="patient.LastName" class="form-control" placeholder="Enter Patient's Last Name" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-3">
                    <label for="national-id">National ID:*</label>
                    <InputText id="national-id" @bind-Value="patient.NationalId" class="form-control" placeholder="Enter the National ID of the Patient" />
                </div>

                <div class="form-group col-3">
                    <label for="mobile">Mobile Number:</label>
                    <InputText id="mobile" @bind-Value="patient.Mobile" class="form-control" placeholder="0500000000" />
                </div>

                <div class="form-group col-3">
                    <label for="birthDate">Date Of Birth:</label>
                    <InputDate id="birthDate" @bind-Value="patient.DateOfBirth" class="form-control" />
                </div>

                <div class="form-group col-3">
                    <label for="email" class="control-label">Email: </label>
                    <InputText type="email" id="email" @bind-Value="patient.Email" class="form-control" placeholder="sam@example.com" />
                    <ValidationMessage For="@(() => patient.Email)" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-3">
                    <label style="display: flex; align-items: center">
                        <span style="margin-right: 32px">Patient Type:*</span>
                    </label>
                    <RadzenDropDown Data="@types" @bind-Value="patientType" Change="ChooseType" />
                </div>

                <div class="form-group col-3">
                    <label style="display: flex; align-items: center">
                        <span style="margin-right: 32px">Gender:*</span>
                    </label>
                    <RadzenDropDown Data="@genders" @bind-Value="patientGender" Change="ChooseGender" />
                </div>

                <div class="form-group col-3">
                    <label style="display: flex; align-items: center">
                        <span style="margin-right: 32px">Language:</span>
                    </label>
                    <RadzenDropDown Data="@languages" @bind-Value="patientLanguage" Change="ChooseLanguage" />
                </div>

                <div class="form-group col-3">
                    <label style="display: flex; align-items: center">
                        <span style="margin-right: 32px">Patient Level of Risk:*</span>
                    </label>
                    <RadzenDropDown Data="@levelOfRisks" @bind-Value="patientLevelOfRisk" Change="ChooseLevelOfRisk" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-3">
                    <label style="display: flex; align-items: center">
                        <span style="margin-right: 32px">Address:*</span>
                    </label>
                    <RadzenDropDown AllowClear="true" TValue="int"
                                    LoadData="@LoadData" AllowFiltering="true"
                                    Data="@patientAddress" TextProperty="StreetName" ValueProperty="AddressId" Style="margin-bottom: 20px" Placeholder="Select Address..." @bind-Value="patient.AddressId"
                                    Change="@(args => Change(args, "Address DropDown "))" />
                </div>
            </div>
            <br />
            <div class="file-field">
                <label for="Photo">Photo:</label>
                <br />
                <div class="btn btn-primary btn-sm float-left">
                    <span>Choose file</span>
                    <input type="file">
                </div>
            </div>
            <br />
            <br />
            <div class="mt-5">
                <RadzenFieldset Text="Archive">
                    <div class="form-check">
                        <InputCheckbox id="ischeckedarchive" @bind-Value="isArchived" class="form-check-input" />
                        <label class="form-check-label" for="ischeckedarchive">Archive Patient Profile</label>
                    </div>
                </RadzenFieldset>
            </div>
            <br />
            <div class="mt-4"></div>
            <button type="submit" class="btn btn-outline-primary">Edit</button>
            <a href="Patient/List" class="btn btn-outline-secondary">Cancel</a>
            <div class="mt-4"></div>
        </EditForm>
    </RadzenFieldset>
</div>
<br />

<p>@message</p>

@code {

    [Parameter]
    public int Id { get; set; }

    Patient patient = new Patient();

    Address address = new Address();

    string message;

    private bool isArchived = false;

    int typeValue;
    int genderValue;
    int languageValue;
    int levelOfRiskValue;

    //Code for drop down list

    IEnumerable<PatientGender> genders = Enum.GetValues(typeof(PatientGender)).Cast<PatientGender>();

    IEnumerable<PatientLanguage> languages = Enum.GetValues(typeof(PatientLanguage)).Cast<PatientLanguage>();

    IEnumerable<PatientType> types = Enum.GetValues(typeof(PatientType)).Cast<PatientType>();

    IEnumerable<PatientLevelOfRisk> levelOfRisks = Enum.GetValues(typeof(PatientLevelOfRisk)).Cast<PatientLevelOfRisk>();

    IEnumerable<Address> patientAddress;

    PatientGender patientGender = PatientGender.Female;

    PatientLanguage patientLanguage = PatientLanguage.English;

    PatientType patientType = PatientType.Student;

    PatientLevelOfRisk patientLevelOfRisk = PatientLevelOfRisk.Low;

    public void ChooseType()
    {
        typeValue = (int)patientType;
        patient.Type = typeValue;
    }

    public void ChooseGender()
    {
        genderValue = (int)patientGender;
        patient.Gender = genderValue;
    }

    public void ChooseLanguage()
    {
        languageValue = (int)patientLanguage;
        patient.Language = languageValue;
    }

    public void ChooseLevelOfRisk()
    {
        levelOfRiskValue = (int)patientLevelOfRisk;
        patient.LevelOfRisk = levelOfRiskValue;
    }

    protected override void OnInitialized()
    {
        patient = Service.GetPatient(Id);
    }

    public void UpdatePatient()
    {
        // Update the patient properties
        patient.IsArchived = isArchived;

        // Edit patient
        Service.UpdatePatient(patient);

        message = "Patient updated successfully";
        NavigationManager.NavigateTo("Patient/List");
    }

    void Change(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        StateHasChanged();
    }

    void LoadData(LoadDataArgs args)
    {
        var query = db.Address.AsQueryable();

        patientAddress = query.ToList();

        InvokeAsync(StateHasChanged);
    }
}