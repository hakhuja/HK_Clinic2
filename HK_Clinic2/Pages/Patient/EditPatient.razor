@*This page is to edit a patient*@


@page "/Patient/Edit/{Id:int}"

@layout NurseLayout

@inject PatientService Service
@inject HKClinicDbContext db

@using HK_Clinic2.Models;
@using HK_Clinic2.Services;

<div class="container">
    <h3>Edit Patient Information</h3>
    <RadzenFieldset Text="Edit">
        <EditForm Model="patient" OnValidSubmit="UpdatePatient">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <RadzenFieldset Text="Personal information">
                <div class="form-row">
                    <div class="form-group col-3">
                        <label style="display: flex; align-items: center">
                            <span style="margin-right: 32px">Address:*</span>
                        </label>
                        <RadzenDropDown AllowClear="true" TValue="int"
                                        LoadData="@LoadData" AllowFiltering="true"
                                        Data="@addresses" TextProperty="StreetName" ValueProperty="AddressId" Style="margin-bottom: 20px" Placeholder="Select Address..." @bind-Value="patient.AddressId"
                                        Change="@(args => Change(args, "Address DropDown "))" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-4">
                        <label for="first-name">First Name:*</label>
                        <InputText id="first-name" @bind-Value="patient.FirstName" class="form-control" placeholder="Enter Patient's Fisrt Name" />
                        <ValidationMessage For="@(() => patient.FirstName)" />
                    </div>

                    <div class="form-group col-4">
                        <label for="middle-name">Middle Name:</label>
                        <InputText id="middle-name" @bind-Value="patient.MiddleName" class="form-control" placeholder="Enter Patient's Middle Name" />
                        <ValidationMessage For="@(() => patient.MiddleName)" />
                    </div>

                    <div class="form-group col-4">
                        <label for="last-name">Last Name:*</label>
                        <InputText id="last-name" @bind-Value="patient.LastName" class="form-control" placeholder="Enter Patient's Last Name" />
                        <ValidationMessage For="@(() => patient.LastName)" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-3">
                        <label for="national-id">National ID:*</label>
                        <InputText id="national-id" @bind-Value="patient.NationalId" class="form-control" placeholder="Enter the National ID of the Patient" />
                        <ValidationMessage For="@(() => patient.NationalId)" />
                    </div>

                    <div class="form-group col-3">
                        <label for="mobile">Mobile Number:</label>
                        <InputText id="mobile" @bind-Value="patient.Mobile" class="form-control" placeholder="0500000000" />
                        <ValidationMessage For="@(() => patient.Mobile)" />
                    </div>

                    <div class="form-group col-3">
                        <label for="birthDate">Date Of Birth:</label>
                        <InputDate id="birthDate" @bind-Value="patient.DateOfBirth" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                        <ValidationMessage For="@(() => patient.DateOfBirth)" />
                    </div>

                    <div class="form-group col-3">
                        <label for="email" class="control-label">Email: </label>
                        <InputText type="email" id="email" @bind-Value="patient.Email" class="form-control" placeholder="sam@example.com" />
                        <ValidationMessage For="@(() => patient.Email)" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-3">
                        <label style="display: flex; align-items: center">
                            <span style="margin-right: 32px">Patient Type:*</span>
                        </label>
                        <RadzenDropDown Data="@types" @bind-Value="patientType" Change="ChooseType" />
                        <ValidationMessage For="@(() => patientType)" />
                    </div>

                    <div class="form-group col-3">
                        <label style="display: flex; align-items: center">
                            <span style="margin-right: 32px">Gender:*</span>
                        </label>
                        <RadzenDropDown Data="@genders" @bind-Value="patientGender" Change="ChooseGender" />
                        <ValidationMessage For="@(() => patientGender)" />
                    </div>

                    <div class="form-group col-3">
                        <label style="display: flex; align-items: center">
                            <span style="margin-right: 32px">Language:</span>
                        </label>
                        <RadzenDropDown Data="@languages" @bind-Value="patientLanguage" Change="ChooseLanguage" />
                        <ValidationMessage For="@(() => patientLanguage)" />
                    </div>

                    <div class="form-group col-3">
                        <label style="display: flex; align-items: center">
                            <span style="margin-right: 32px">Patient Level of Risk:*</span>
                        </label>
                        <RadzenDropDown Data="@levelOfRisks" @bind-Value="patientLevelOfRisk" Change="ChooseLevelOfRisk" />
                        <ValidationMessage For="@(() => patientLevelOfRisk)" />
                    </div>
                </div>

                <div class="file-field">
                    <label for="Photo">Photo:</label>
                    <br />
                    <div class="btn btn-primary btn-sm float-left">
                        <span>Choose file</span>
                        <input type="file" @bind-value="patient.Image">
                    </div>
                    <br />
                </div>
                <br />
            </RadzenFieldset>
            <br />
            <!--<RadzenFieldset Text="Student Information">
            <div class="form-row">-->
            @*<div class="form-group col-3">
                    <label for="student-id">Student ID:*</label>
                    <InputNumber id="student-id" @bind-Value="patient.StudentId" class="form-control" placeholder="Enter Student's ID" />
                    <ValidationMessage For="@(() => patient.StudentId)" />
                </div>*@

            @*<div class="form-group col-3">
                    <label for="education-level">Education Level:*</label>
                    <InputSelect class="form-control" id="education-level" @bind-Value="student.EducationLevel">
                        @foreach (var item in Enum.GetValues(typeof(EducationLevelEnum)))
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                </div>*@

            @*<div class="form-group col-2">
                    <label for="grade">Grade:*</label>
                    <InputSelect class="form-control" id="grade" @bind-Value="student.Class.Grade" placeholder="---Select a Grade---">
                        @foreach (var item in Enum.GetValues(typeof(GradeEnum)))
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                </div>

                <div class="form-group col-2">
                    <label for="class-number">Class Number:*</label>
                    <InputText id="class-number" @bind-Value="student.Class.ClassNumber" class="form-control" placeholder="Enter student's class number" />
                                            <ValidationMessage For="@(() => student.Class.ClassNumber)" />
                </div>

                <div class="form-group col-2">
                    <label for="year">Year:*</label>
                    <InputNumber id="year" @bind-Value="student.Class.Year" class="form-control" placeholder="Enter the year yyyy" />
                                            <ValidationMessage For="@(() => student.Class.Year)" />
                </div>*@
            <!--</div>
            </RadzenFieldset>
            <br />
            <RadzenFieldset Text="Employee Information">
                <div class="form-row">-->
            @*<div class="form-group col-3">
                    <label for="student-id">Employee ID:*</label>
                    <InputNumber id="student-id" @bind-Value="patient.EmployeeId" class="form-control" placeholder="Enter Employee's ID" />
                    <ValidationMessage For="@(() => patient.EmployeeId)" />
                </div>*@

            @*<div class="form-group col-3">
                    <label for="emergency-contact-number">Emergency Contact Number:</label>
                    <InputText id="emergency-contact-number" @bind-Value="patient.Employee.EmergencyContactNumber" class="form-control" placeholder="0500000000" />
                    <ValidationMessage For="@(() => patient.Employee.EmergencyContactNumber)" />
                </div>*@

            @*<div class="form-group col-3">
                    <label for="marital-status">Marital Status:</label>
                    <InputSelect class="form-control" id="marital-status" @bind-Value="patient.Employee.MaritalStatus">
                        @foreach (var item in Enum.GetValues(typeof(MaritalStatusEnum)))
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                </div>*@
            <!--</div>
            </RadzenFieldset>-->
            <br />
            <div class="mt-5">
                <RadzenFieldset Text="Archive">
                    <div class="form-check">
                        <InputCheckbox id="ischeckedarchive" @bind-Value="isArchived" class="form-check-input" />
                        <label class="form-check-label" for="ischeckedarchive">Archive Patient Profile</label>
                    </div>
                </RadzenFieldset>
            </div>
            <br />
            <div class="mt-4"></div>
            <button type="submit" class="btn btn-outline-primary">Edit</button>
            &nbsp;&nbsp;
            <a href="Patient/List" class="btn btn-outline-secondary">Go back to the list</a>
            <div class="mt-4"></div>
        </EditForm>
    </RadzenFieldset>
</div>
<br />
<p style="color:green; text-align:center;">@message</p>

@code {
    [Parameter]
    public int Id { get; set; }

    Patient patient = new Patient();

    string message;

    //Used for the checkbox
    private bool isArchived = false;

    int typeValue;
    int genderValue;
    int languageValue;
    int levelOfRiskValue;

    //Code for drop down list

    IEnumerable<PatientGender> genders = Enum.GetValues(typeof(PatientGender)).Cast<PatientGender>();

    IEnumerable<PatientLanguage> languages = Enum.GetValues(typeof(PatientLanguage)).Cast<PatientLanguage>();

    IEnumerable<PatientType> types = Enum.GetValues(typeof(PatientType)).Cast<PatientType>();

    IEnumerable<PatientLevelOfRisk> levelOfRisks = Enum.GetValues(typeof(PatientLevelOfRisk)).Cast<PatientLevelOfRisk>();

    IEnumerable<Address> addresses;

    PatientGender patientGender;

    PatientLanguage patientLanguage;

    PatientType patientType;

    PatientLevelOfRisk patientLevelOfRisk;

    public void ChooseType()
    {
        typeValue = (int)patientType;
        patient.Type = typeValue;
    }

    public void ChooseGender()
    {
        genderValue = (int)patientGender;
        patient.Gender = genderValue;
    }

    public void ChooseLanguage()
    {
        languageValue = (int)patientLanguage;
        patient.Language = languageValue;
    }

    public void ChooseLevelOfRisk()
    {
        levelOfRiskValue = (int)patientLevelOfRisk;
        patient.LevelOfRisk = levelOfRiskValue;
    }

    protected override void OnInitialized()
    {
        patient = Service.GetPatient(Id);
    }

    public void UpdatePatient()
    {
        // Update the patient properties
        patient.IsArchived = isArchived;

        // Edit patient
        Service.UpdatePatient(patient);

        message = "Patient updated successfully";
    }

    void Change(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        StateHasChanged();
    }

    void LoadData(LoadDataArgs args)
    {
        var query = db.Address.AsQueryable();

        addresses = query.ToList();

        InvokeAsync(StateHasChanged);
    }
}