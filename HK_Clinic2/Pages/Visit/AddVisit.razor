@page "/Visit/Add/{Id:int}"

@layout NurseLayout

@using HK_Clinic2.Models
@using HK_Clinic2.Services

@inject VisitService Service
@inject PatientService PService
@inject NavigationManager NavigationManager


<div class="container">
    <h3>Add a Visit</h3>
    <RadzenFieldset Text="Add a Visit">
        <EditForm Model="visit" OnValidSubmit="CreateVisit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="row col-4">
                <label>Appointment ID: @Id</label>
            </div>
            <br />
            <div class="row col-6">
                <label for="patientId">Patient Name:*</label>
                <select id="patientId" class="form-control" @onchange="VisitPatientSelected">
                    <option value="">Select a  Patient Name...</option>
                    @foreach (var item in patients)
                    {
                        <option value="@item.PatientId">@item.FirstName @item.LastName</option>
                    }
                </select>
                <ValidationMessage For="@(() => visit.PatientId)" />
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <label for="VisitDateTime">Visit Date and Time:*</label>
                    <input type="datetime-local" id="VisitDateTime" class="form-control" @bind-value="visit.VisitDateTime" />
                    <ValidationMessage For="@(() => visit.VisitDateTime)" />
                </div>
                <div class="col">
                    <label for="assessment">Assessment:*</label>
                    <InputSelect class="form-control" id="assessment" @bind-Value="visit.Assessment" Placeholder="Select Assessment...">
                        @foreach (var assessment in Enum.GetValues(typeof(PatientAssessment)))
                        {
                            <option value="@assessment">@assessment</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => visit.Assessment)" />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="form-group col">
                    <label for="treatment">Treatment:* </label>
                    <InputTextArea class="form-control" id="treatment" rows="3" @bind-Value="treatment.Description" placeholder="Was given a Tablet of Panadol"></InputTextArea>
                    <ValidationMessage For="@(() => treatment.Description)" />
                </div>
                <div class="form-group col">
                    <label for="note">Note: </label>
                    <InputTextArea class="form-control" id="note" rows="3" @bind-Value="visit.Note" placeholder="Enter note..."></InputTextArea>
                    <ValidationMessage For="@(() => visit.Note)" />
                </div>
            </div>
            <div class="mt-4"></div>
            <button type="submit" class="btn btn-outline-primary">Add Visit</button>
            &nbsp;&nbsp;
            <a href="Visit/List" class="btn btn-outline-secondary" role="button">Go back to the list</a>
        </EditForm>
    </RadzenFieldset>
</div>

<p style="color:green; text-align:center;">@message</p>

@code {
    [Parameter]
    public int Id { get; set; }

    string message;

    Visit visit = new Visit();
    Treatment treatment = new Treatment();

    List<Patient> patients = new List<Patient>();

    protected override void OnInitialized()
    {
        patients = PService.GetPatients();
    }

    private void VisitPatientSelected(ChangeEventArgs e)
    {
        visit.PatientId = int.Parse(e.Value.ToString());
    }

    private void CreateVisit()
    {
        visit.AppointmentId = Id;
        Service.AddTreatment(treatment);
        int id = Service.GetTreatments().Last().TreatmentId;
        visit.TreatmentId = id;
        Service.AddVisit(visit);

        // To empty the form
        visit = new Visit();

        // May navigate to the Visit/List component
        //NavigationManager.NavigateTo("Visit/List");
    }
}