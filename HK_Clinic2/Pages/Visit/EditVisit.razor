@page "/Visit/Edit/{Id:int}"

@layout NurseLayout

@inject NavigationManager NavigationManager
@inject VisitService Service
@inject PatientService PService
@inject HKClinicDbContext db

@using HK_Clinic2.Models;
@using HK_Clinic2.Services;

<div class="container">
    <h3>Edit a Visit</h3>
    <RadzenFieldset Text="Edit">
        <EditForm Model="visit" OnValidSubmit="UpdateVisit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="col-4">
                <label for="VisitDateTime">Visit Date and Time:*</label>
                <input type="datetime-local" id="VisitDateTime" class="form-control" @bind-value="visit.VisitDateTime" />
                <ValidationMessage For="@(() => visit.VisitDateTime)" />
            </div>
            <br />
            <div class="col-4">
                <label for="patientId">Patient ID:*</label>
                <InputSelect @bind-Value="visit.PatientId" id="patientId" class="form-control">
                    <option value="">Select a  Patient ID...</option>
                    @foreach (var item in patients)
                    {
                        <option value=@item.PatientId>@item.StudentId @item.EmployeeId</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => visit.PatientId)" />
            </div>
            <br />
            <div class="col-4">
                <label for="assessment">Assessment:*</label>
                <InputSelect class="form-control" id="assessment" @bind-Value="visit.Assessment">
                    @foreach (var assessment in Enum.GetValues(typeof(PatientAssessment)))
                    {
                        <option value="@assessment">@assessment</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => visit.Assessment)" />
            </div>
            <br />
            <div class="form-group">
                <label for="treatment">Treatment:* </label>
                <InputTextArea class="form-control" id="treatment" rows="3" @bind-Value="visit.Treatment.Description"></InputTextArea>
                <ValidationMessage For="@(() => visit.Treatment.Description)" />
            </div>
            <div class="form-group">
                <label for="note">Note: </label>
                <InputTextArea class="form-control" id="note" rows="3" @bind-Value="visit.Note"></InputTextArea>
                <ValidationMessage For="@(() => visit.Note)" />
            </div>

            <div>
                <label>Visit Status: </label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="status" value="option1">
                    <label class="form-check-label" for="status">
                        Completed
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="status2" value="option2">
                    <label class="form-check-label" for="status2">
                        Incomplete
                    </label>
                </div>
                <ValidationMessage For="@(() => visit.Status)" />
            </div>
            <br>
            <div class="mt-4"></div>
            <button type="submit" class="btn btn-outline-primary">Edit</button>
            <a href="Visit/List" class="btn btn-outline-secondary" role="button">Go back to the list</a>
            <div class="mt-4"></div>
        </EditForm>
    </RadzenFieldset>
</div>

<p>@message</p>

@code{
    [Parameter]
    public int Id { get; set; }

    string message;

    Visit visit = new Visit();

    List<Patient> patients = new List<Patient>();

    protected override void OnInitialized()
    {
        visit = Service.GetVisit(Id);
        patients = PService.GetPatients();
    }

    public void UpdateVisit()
    {
        // Edit Visit
        Service.UpdateVisit(visit);

        message = "Visit updated successfully";
        NavigationManager.NavigateTo("Visit/List");
    }
}